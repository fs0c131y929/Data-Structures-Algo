class TreeNode:
    def __init__(self, value, left = None, right = None):
        self.value = value
        self.left = left
        self.right = right
        
    def is_valid_root(root):
        stack = [(root, None, None)]

        while stack:
            node, min_value, max_value = stack.pop()

            if not node:
                continue

            if min_value is not None and node.value <= min_value:
                return False
            elif max_value is not None and node.value >= max_value:
                return False 

            #then 
            stack.append((node.right, node.value, max_value))
            stack.append((node.left, min_value, node.value))

        return True            

root = TreeNode(2)
root.left = TreeNode(12)
root.right = TreeNode(9)
root.left.left = TreeNode(1)
root.left.right = TreeNode(3)
#false will be returned.
print(TreeNode.is_valid_root(root))
